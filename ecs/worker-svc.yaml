Parameters:
  ClusterArn:
    Type: String
  ClusterName:
    Type: String
  WorkerImageUri:
    Type: String
  JobQueueName:
    Type: String
  JobQueueUrl:
    Type: String
  LogGroup:
    Type: String
  PrivateSubnetAId:
    Type: String
  PrivateSubnetBId:
    Type: String
  TaskExecutionRoleArn:
    Type: String
  TaskIamRoleArn:
    Type: String

Resources:
  WorkerTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: worker
          Image: !Ref WorkerImageUri
          Environment:
            - Name: WORKER_SQS_QUEUE_URL
              Value: !Ref JobQueueUrl
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: worker
          MemoryReservation: 512
          StopTimeout: 5
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref TaskExecutionRoleArn
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !Ref TaskIamRoleArn

  WorkerService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ClusterArn
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PrivateSubnetAId
            - !Ref PrivateSubnetBId
      TaskDefinition: !Ref WorkerTaskDef

  WorkerSvcScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 0
      ResourceId: !Sub service/${ClusterName}/${WorkerService.Name}
      RoleARN: !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService'
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  # Add worker tasks when the ratio between running workers and required
  # workers is less than 1, with a cooldown of 2 minutes:
  #
  # - If the ratio is between 1 and 0.5, add 1 worker.
  # - If the ratio is less than 0.5, add 2 workers.
  WorkerSvcScaleUpPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WorkerSvcScaleUp
      PolicyType: StepScaling
      ScalingTargetId: !Ref WorkerSvcScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 120
        StepAdjustments:
          - MetricIntervalLowerBound: -0.5
            MetricIntervalUpperBound: 0
            ScalingAdjustment: 1
          - MetricIntervalUpperBound: -0.5
            ScalingAdjustment: 2

  # Remove worker tasks when the ratio between running workers and required
  # workers is greater than 1, with a cooldown of 5 minutes.
  WorkerSvcScaleDownPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WorkerSvcScaleDown
      PolicyType: StepScaling
      ScalingTargetId: !Ref WorkerSvcScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 300
        StepAdjustments:
          # - MetricIntervalLowerBound: 0
          #   MetricIntervalUpperBound: 1
          #   ScalingAdjustment: 1
          # - MetricIntervalLowerBound: 1
          #   ScalingAdjustment: 2
          - MetricIntervalLowerBound: 0
            ScalingAdjustment: -1

  WorkerSvcScaleUpAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref WorkerSvcScaleUpPolicy
      ComparisonOperator: LessThanThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: 'm_v'
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value: !Ref JobQueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: 't_r'
          MetricStat:
            Metric:
              Dimensions:
                - Name: ClusterName
                  Value: !Ref ClusterName
                - Name: ServiceName
                  Value: !GetAtt WorkerService.Name
              MetricName: RunningTaskCount
              Namespace: ECS/ContainerInsights
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: 'r'
          Expression: 'IF(m_v == 0, 2, t_r / CEIL(m_v / (3 * 60)))'
          Label: 'WorkerTasksRunningVsNeededRatio'
          ReturnData: true
      Threshold: 1

  WorkerSvcScaleDownAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref WorkerSvcScaleDownPolicy
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 5
      EvaluationPeriods: 5
      Metrics:
        - Id: 'm_v'
          MetricStat:
            Metric:
              Dimensions:
                - Name: QueueName
                  Value: !Ref JobQueueName
              MetricName: ApproximateNumberOfMessagesVisible
              Namespace: AWS/SQS
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: 't_r'
          MetricStat:
            Metric:
              Dimensions:
                - Name: ClusterName
                  Value: !Ref ClusterName
                - Name: ServiceName
                  Value: !GetAtt WorkerService.Name
              MetricName: RunningTaskCount
              Namespace: ECS/ContainerInsights
            Period: 60
            Stat: Sum
          ReturnData: false
        - Id: 'r'
          Expression: 'IF(m_v == 0, 2, t_r / CEIL(m_v / (3 * 60)))'
          Label: 'WorkerTasksRunningVsNeededRatio'
          ReturnData: true
      Threshold: 1

# Outputs:
#   ServiceName:
#     Value: !GetAtt FontColorService.Name
